<?xml version="1.0" encoding="UTF-8"?>
<part xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.0" xml:id="overview">
    <title>Bootique Overview</title>
 
    <chapter xml:id="overview-what-is-bootique">
        <title>What is Bootique</title>
        <para>Bootique is a minimally opinionated technology for building container-less runnable
            Java applications. No JEE container required to run your app! It is an ideal platform
            for <emphasis><link xlink:href="http://martinfowler.com/articles/microservices.html"
                    >microservices</link></emphasis>, as it allows you to create a fully functional
            app with minimal-to-no setup. Though it is not limited to a specific kind of app (or the
            "micro" size) and can be used for REST services, webapps, runnable jobs, DB migrations,
            JavaFX GUI apps to mention a few examples.</para>
        <para>Unlike traditional container-based apps, Bootique allows you to control your
                <code>main()</code> method and create Java apps that behave like simple executable
            commands that can be run with
            Java:<programlisting language="bourne">java -jar my.jar [arguments]</programlisting></para>
        <para>Each Bootique app can be started with a YAML config file (or URL), that makes it ideal
            for cloud deployments.</para>
        <para>Bootique was inspired by two similar products - <link
                xlink:href="http://www.dropwizard.io/">Dropwizard</link> and <link
                xlink:href="http://projects.spring.io/spring-boot/">SpringBoot</link>, however its
            focus is different. Bootique favors modularity and clean pluggable architecture.
            Bootique is built on top of <link xlink:href="https://github.com/google/guice">Google
                Guice</link> dependency injection (DI) container, which provides the core of its
            modularity mechanism. This means that pretty much anything in Bootique can be
            customized/overridden to your liking.</para>
        
       
    </chapter>
    <chapter>
        <title>Requirements</title>
        <section>
            <title>Java Version</title>
            <para>Java 8 or newer is required. </para>
        </section>
        <section>
            <title>Build System</title>
            <para>Bootique apps can be built using any Java build system (Ant, Maven, Gradle, etc).
                Examples in the documentation are based on Maven and
                <code>maven-shade-plugin</code>. While this is not strictly a requirement, Bootique
                apps are usually packaged into "fat" runnable jars and don't have any runtime
                dependencies beyond the JRE.</para>
       
        </section>
        <section>
            <title>Programming Skills</title>
            <para>Everyting you know about Java programming will be applicable when working with
                Bootique. You may need to  "unlearn" some of the practices related to JEE
                configuration and deployment though. </para>
            <para>Integration of various parts of Bootique app is done via <link
                    xlink:href="https://github.com/google/guice">Google Guice</link>. In most cases
                Bootique API would steer you towards idiomatic approach to integration, so deep
                knowledge of  Guice is not required. Though it wouldn't hurt to understand a few
                main concepts: modules, bindings, <link
                    xlink:href="https://github.com/google/guice/wiki/Multibindings"
                    >multibindings</link>, <link
                    xlink:href="http://google.github.io/guice/api-docs/latest/javadoc/index.html?com/google/inject/util/Modules.html"
                    >overrides</link>.</para>
            <para>Java <link
                    xlink:href="https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html"
                    >ServiceLoader</link> facility is another important part of Bootique, and
                probably one other thing that you shouldn't worry too much about initially.</para>
        </section>
    </chapter>
    <chapter>
        <title>What You Can Do with Bootique</title>
        <para>Core framework of Bootique is pretty small. It contains a command-line processor,
            configuration parser and a DI environment to load modules and execute commands. Most of
            the actual functionality is delegated to modules that are either developed by Bootique
            community or written by you as a developer. There is a growing list of the former kind.
            Here are just some examples to give a taste of what you can do with Bootique out of the box:<itemizedlist>
                <listitem>
                    <para><link xlink:href="https://github.com/nhl/bootique-jetty">Bootique
                            Jetty</link> provides embedded Jetty web server to run servlets and
                        servlet filters</para>
                </listitem>
                <listitem>
                    <para><link xlink:href="https://github.com/nhl/bootique-jersey">Bootique
                            Jersey</link> provides functionality to run JAX-RS resources on top of
                        bootique-jetty. This is a starting point of your typical microservices
                        stack.</para>
                </listitem>
                <listitem>
                    <para><link xlink:href="https://github.com/nhl/bootique-jdbc">Bootique
                            JDBC</link> provides a collection of JDBC DataSources to the app.</para>
                </listitem>
                <listitem>
                    <para><link xlink:href="https://github.com/nhl/bootique-cayenne">Bootique
                            Cayenne</link> provides a powerful ORM.</para>
                </listitem>
                <listitem>
                    <para><link xlink:href="https://github.com/nhl/bootique-liquibase">Bootique
                            Liquibase</link> provides a way to run DB migrations as Bootique
                        apps.</para>
                </listitem>
                <listitem>
                    <para>and more...</para>
                    <para> </para>
                </listitem>
            </itemizedlist></para>
    </chapter>
</part>
